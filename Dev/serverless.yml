service: my-service

provider:
  name: aws
  runtime: nodejs18.x
 

functions:
  MyFunction:
    handler: src/handler.generateRandomNumber
    environment:
      ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
      SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
      REGION: ${env:AWS_REGION}
      USER_POOL_ID:
        Ref: MyUserPool
      CLIENT_ID:
        Ref: MyUserPoolClient

    events:
      - http:
          path: /random
          method: get
          authorizer:
            name: MyCognitoAuthorizer
            type: COGNITO_USER_POOLS
            identitySource: method.request.header.Authorization
            arn:
              Fn::GetAtt:
                - MyUserPool
                - Arn

resources:
  Resources:
    ItemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: My-Table
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N # Assuming "id" is a number

        KeySchema:
          - AttributeName: id
            KeyType: HASH
          # Add other key attributes as needed
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    MyUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: MyUserPool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: true
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true

    MyUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: MyUserPoolClient
        UserPoolId:
          Ref: MyUserPool

  